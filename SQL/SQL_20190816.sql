SELECT NAME, SALARY
FROM S_EMP
WHERE SALARY >= '1000'
;

SELECT DEPT_ID, AVG(SALARY)
FROM S_EMP
GROUP BY DEPT_ID
ORDER BY 2
;

SELECT REGION_ID, COUNT(*)
FROM S_DEPT
GROUP BY REGION_ID
ORDER BY 1
;

SELECT TITLE, SUM(SALARY)
FROM S_EMP
WHERE TITLE NOT LIKE '%부장'
GROUP BY TITLE
HAVING SUM(SALARY) >= 8000
ORDER BY 2
;

SELECT DEPT_ID, AVG(SALARY)
FROM S_EMP
WHERE TITLE = '사원'
GROUP BY DEPT_ID
;

SELECT DEPT_ID, TITLE, COUNT(*)
FROM S_EMP
GROUP BY DEPT_ID, TITLE
ORDER BY 1, 2
;

SELECT DEPT_ID, COUNT(*)
FROM S_EMP
GROUP BY DEPT_ID
ORDER BY 1
;

SELECT DEPT_ID, MIN(SALARY), MAX(SALARY)
FROM S_EMP
GROUP BY DEPT_ID
HAVING MIN(SALARY) <> MAX(SALARY)
ORDER BY 1
;

SELECT E.NAME, E.DEPT_ID, S.NAME
FROM S_EMP E, S_DEPT S
WHERE E.DEPT_ID = S.ID
;

SELECT (SELECT SYSDATE FROM DUAL), ID, NAME
FROM S_EMP
;

SELECT TITLE, AVG(SALARY)
FROM S_EMP
GROUP BY TITLE
HAVING AVG(SALARY) = (  SELECT MIN(AVG(SALARY))
                        FROM S_EMP
                        GROUP BY TITLE)
;

SELECT MIN(AVG(SALARY))
FROM S_EMP
GROUP BY TITLE
;

DROP TABLE TMP;

-- 1. 테이블 복사
CREATE TABLE TMP
--AS SELECT ID, NAME, MAILID, START_DATE, MANAGER_ID, TITLE, DEPT_ID, SALARY, COMMISION_PCT
AS SELECT *
FROM S_EMP
;

-- 2. 원본 테이블 데이터 날림
TRUNCATE TABLE S_EMP;
--DELETE FROM S_EMP;

-- 3. NAME의 VARCHAR(25) -> (8)
ALTER TABLE S_EMP
MODIFY NAME VARCHAR2(8)
;

-- 4. 복사한 테이블 데이터를 원본 테이블로 잘라서 옮김
INSERT INTO S_EMP
SELECT ID, SUBSTR(NAME, LENGTH(NAME)-1, 2), MAILID, START_DATE, MANAGER_ID, TITLE, DEPT_ID, SALARY, COMMISION_PCT
FROM TMP
;

SELECT * FROM S_EMP;

SELECT /*+ ALL_ROWS */ * FROM S_EMP;

CREATE INDEX IDX_ID_NAME ON S_EMP(ID, NAME);

SELECT ID, NAME, ROWID
FROM S_EMP
ORDER BY ID, NAME
;

CREATE INDEX IDX_EMP_NAME ON S_EMP(NAME);

SELECT NVL(1, 0) FROM DUAL;

SELECT DECODE(3, 1, '냐옹', 2, '멍멍', '어흥') FROM DUAL;
SELECT DECODE('', 'D', 'DDD', 'R', 'RRR', 'O') FROM DUAL;

SELECT NAME, SALARY, DECODE(TRUNC(SALARY/1000), 0, 'E', 1, 'D', 2, 'C', 3, 'B', 'A')
FROM S_EMP;

SELECT DEPT_ID, TITLE
FROM S_EMP
ORDER BY 1, 2
;

SELECT DEPT_ID, TITLE
FROM S_EMP
ORDER BY 1
;

SELECT *
FROM (SELECT DEPT_ID, TITLE FROM S_EMP)
PIVOT (
    COUNT(*)
    FOR TITLE IN ('사원', '과장', '부장', '이사', '사장')
)
ORDER BY DEPT_ID
;

SELECT DEPT_ID,
    COUNT(DECODE(TITLE, '사원', 0)) "사원",
    COUNT(DECODE(TITLE, '과장', 0)) "과장",
    COUNT(DECODE(TITLE, '부장', 0)) "부장",
    COUNT(DECODE(TITLE, '이사', 0)) "이사",
    COUNT(DECODE(TITLE, '사장', 0)) "사장"
FROM S_EMP
GROUP BY DEPT_ID
ORDER BY DEPT_ID
;

SELECT DEPT_ID, TITLE, COUNT(*)
FROM S_EMP
WHERE DEPT_ID IN (106, 112, 113)
GROUP BY ROLLUP(DEPT_ID, TITLE) -- ROLLUP은 그룹별 합계 보여주는 함수
ORDER BY DEPT_ID
;

SELECT DEPT_ID, TITLE, COUNT(*)
FROM S_EMP
WHERE DEPT_ID IN (106, 112, 113)
GROUP BY CUBE(DEPT_ID, TITLE)   -- CUBE는 그룹별 합계&소계 보여주는 함수
ORDER BY DEPT_ID
;

SELECT ID, NAME, SALARY,
    RANK() OVER (ORDER BY SALARY DESC) AS RANK
FROM S_EMP
;

SELECT * FROM (SELECT DEPT_ID, NAME,SALARY,
RANK() OVER (
PARTITION BY DEPT_ID
ORDER BY SALARY DESC) AS RANK
FROM S_EMP) E
WHERE E.RANK <= 3
;

SELECT NAME, SALARY, DEPT_ID
FROM S_EMP OUTER
WHERE SALARY < (SELECT AVG(SALARY)
                FROM S_EMP
                WHERE DEPT_ID = OUTER.DEPT_ID)
;

SELECT NAME, SALARY, DEPT_ID
FROM S_EMP OUTER
;

SELECT AVG(SALARY)
FROM S_EMP
GROUP BY DEPT_ID
;

SELECT ID, NAME, TITLE, DEPT_ID, MANAGER_ID
FROM S_EMP E
WHERE EXISTS (SELECT ID
                FROM S_EMP
                WHERE MANAGER_ID = E.ID)
;

-- 매니저인 사람의 ID, NAME, DEPT_ID를 출력하시오.
SELECT DISTINCT E1.ID, E1.NAME, E1.DEPT_ID
FROM S_EMP E1, S_EMP E2
WHERE E1.ID = E2.MANAGER_ID
ORDER BY 1
;

-- EXISTS가 더 빠름
SELECT ID, NAME, DEPT_ID
FROM S_EMP
WHERE ID IN (SELECT DISTINCT MANAGER_ID
            FROM S_EMP)
;

SELECT NAME
FROM S_EMP
WHERE ROWNUM <= 5
AND NAME <> '길동'
ORDER BY NAME
;

-- 연봉 상위 5명
SELECT NAME, SALARY
FROM (  SELECT *
        FROM S_EMP
        ORDER BY SALARY DESC)
WHERE ROWNUM <= 5
;

SELECT NAME, SALARY, ROWNUM
FROM S_EMP
ORDER BY 2 DESC
;
